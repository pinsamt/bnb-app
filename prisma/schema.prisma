// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  email          String     @unique
  name           String?
  password       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  ownedProperties Property[] @relation("Owner")
  bookings       Booking[]   @relation("UserBooking")
  isAdmin        Boolean
}

model Property {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  desc       String
  location   String
  price      Float
  available  Boolean
  bookings   Booking[] @relation("PropertyBooking")
  ownerId    String @db.ObjectId // Foreign key for User
  owner      User   @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
}

model Booking {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime @default(now())
  checkInDate   DateTime
  checkOutDate  DateTime
  totalPrice    Float
  madeBy        User     @relation("UserBooking", fields: [madeById], references: [id])
  madeById      String   @db.ObjectId // Foreign key to User
  property      Property @relation("PropertyBooking", fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId    String   @db.ObjectId // Foreign key to Property
}